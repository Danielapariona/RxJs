import { of, from } from 'rxjs';
/**
 * of = toma argumentos y genera y una secuencia
 * from = Crea un observacble en base a un array, promisem iterable, observable
 */

const observer = {
    next: val => console.log('next', val),
    complete: () => console.log('complete')
}

// funciones generadoras
const miGenerador = function* () {
    yield 1;
    yield 2;
    yield 3;
    yield 4;
    yield 5;
}

const miIterable = miGenerador();

/* for (let id of miIterable) {
    console.log(id);
} */

from(miIterable).subscribe(observer);



// const source1$ = from([1,2,3,4,5]);
// const source2$ = of(...[1, 2, 3, 4, 5]);
const source$ = from(fetch('https://api.github.com/users/klerith'));

//source1$.subscribe(observer);
//source2$.subscribe(observer);
source$.subscribe(async (resp) => {
    const dataResp = await resp.json();
    console.log(dataResp);
});
